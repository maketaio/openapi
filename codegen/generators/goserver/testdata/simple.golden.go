// Code generated by oapigen; DO NOT EDIT.
package testdata

import (
	"fmt"
	"github.com/maketaio/openapi/util/ptr"
	"github.com/maketaio/openapi/runtime/validation"
)

// Age is the generated type for schema Age
type Age int64

func (o *Age) Validate(path validation.Path) []*validation.Error {
	if o == nil {
		return nil
	}
	var errors []*validation.Error
	if *o >= 24 {
		errors = append(errors, &validation.Error{
			Path: path,
			Detail: validation.Detail{
				Code:  validation.CodeIntLT,
				IntLT: ptr.To(int64(24)),
			},
			Message: fmt.Sprintf("%s must be less than 24", path),
		})
	}
	if *o < 5 {
		errors = append(errors, &validation.Error{
			Path: path,
			Detail: validation.Detail{
				Code:   validation.CodeIntGTE,
				IntGTE: ptr.To(int64(5)),
			},
			Message: fmt.Sprintf("%s must be greater than or equal to 5", path),
		})
	}
	return errors
}

// User is the generated type for schema User
type User struct {
	Id       int64              `json:"id"`
	Name     string             `json:"name"`
	Age      *Age               `json:"age,omitzero"`
	Metadata *map[string]string `json:"metadata,omitzero"`
}
